// Problem 2: Even Fibonacci Numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.

function fiboEvenSum(n){
    let fibo = [1, 2, 3];
    for (let i = 3; (fibo[i-2]+fibo[i-1]) <= n; i++){
        fibo.push(fibo[i-2]+fibo[i-1])
    }
    const sum = fibo.reduce((partialSum, a) => {
        if (a % 2 == 0)
            partialSum = partialSum + a;
        return partialSum; 
    }, 0)
    return sum;
}
console.log(fiboEvenSum(10))
console.log(fiboEvenSum(34))
console.log(fiboEvenSum(60))
console.log(fiboEvenSum(1000))
console.log(fiboEvenSum(100000))
console.log(fiboEvenSum(4000000))
