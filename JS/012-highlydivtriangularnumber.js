// Problem 12: Highly divisible triangular number
// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
// Let us list the factors of the first seven triangle numbers:

// 1: 1
// 3: 1, 3
// 6: 1, 2, 3, 6
// 10: 1, 2, 5, 10
// 15: 1, 3, 5, 15
// 21: 1, 3, 7, 21
// 28: 1, 2, 4, 7, 14, 28
// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over n divisors?
function countDivisors(n) {
        let cnt = 0;
        for (let i = 0; i <= Math.sqrt(n); i++){
            if (n % i == 0){
                if (n / i == i)
                    cnt++;
                else
                    cnt += 2;
            }
        }
        return cnt;
    }
function triangleNumber(n){
     return Array(n).fill(0).map((_, i) => i + 1).reduce((pV, cV) => pV + cV, 0)
}

function divisibleTriangleNumber(n) {
    var res = 0;
    var tNB = 0;
    for (let j = 1;; j++){
        tNB = triangleNumber(j);
        res = countDivisors(tNB);
        if (res >= n)
            break;
    }
    return tNB;
  }
  
  console.log(divisibleTriangleNumber(5));
  console.log(divisibleTriangleNumber(23));
  console.log(divisibleTriangleNumber(167));
  console.log(divisibleTriangleNumber(374));
  console.log(divisibleTriangleNumber(500));